using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Administrativo.Domain.Entities;

namespace Administrativo.Domain.EntitiesConfigs
{
    public class AndamentoProcessoAdministrativoConfig : IEntityTypeConfiguration<AndamentoProcessoAdministrativo>
    {
        public void Configure(EntityTypeBuilder<AndamentoProcessoAdministrativo>builder){

            //Tabela
            builder.ToTable("AndamentoProcessoAdministrativo");
            
            //Primary Key
            builder.HasKey(p => p.Id);

            //Index
            builder.HasIndex(i => i.ProcessoId)
            .IsUnique(false)
            .HasDatabaseName("idx_andamentoprocessoadministrativo_processo");

            //Foreign Key
            builder.HasOne(f => f.Processo)
            .WithOne(f => f.AndamentoProcessoAdministrativo)
            .HasForeignKey<AndamentoProcessoAdministrativo>(f => f.ProcessoId)
            .HasConstraintName("fk_andamentoprocessoadministrativo_processo");

            //Atributos
            builder.Property(f => f.Id)
            .HasColumnName("Id")
            .ValueGeneratedOnAdd()
            .IsRequired();

            builder.Property(f => f.ProcessoId)
            .HasColumnName("ProcessoId")
            .IsRequired();

            builder.Property(f => f.Descricao)
            .HasColumnName("Descricao")
            .HasColumnType("ntext")
            .IsRequired();

            builder.Property(f => f.Providencia)
            .HasColumnName("Providencia")
            .HasMaxLength(500)
            .IsRequired();

            builder.Property(f => f.Observacao)
            .HasColumnName("Observacao")
            .HasMaxLength(500)
            .IsRequired();
         
            builder.Property(f => f.DataInclusao)
            .HasColumnName("DataInclusao")
            .IsRequired();

            builder.Property(f => f.UsuarioInclusao)
            .HasColumnName("UsuarioInclusao")
            .IsRequired();

            
        }
    }
}